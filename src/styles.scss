// Remove the static font import
// @import url('https://fonts.googleapis.com/css2?family=Inter:wght@300;400;500;600;700&display=swap');

@use './styles/theme' as theme;
@use './styles/layout';
@use './styles/field-group-layout';

// Make sure we can access map and color functions
@use 'sass:map';
@use 'sass:color';

// Import highlight.js themes conditionally based on theme
// Default light theme for initial load
@import '../node_modules/highlight.js/styles/default.css';

/* CSS Custom Properties for consistent theming */
:root {
  /* Primary colors */
  --primary-color: #{theme.$primary-color};
  --primary-color-hover: #{color.adjust(theme.$primary-color, $lightness: -5%)};

  /* Background colors */
  --bg-card: #{theme.bg(card)};
  --bg-hover: #{theme.bg(hover)};
  --bg-card-alt: #f5f5f5; /* Alternative card background for code blocks */

  /* Foreground colors */
  --fg-text: #{theme.fg(text)};
  --fg-secondary-text: #{theme.fg(secondary-text)};
  --fg-divider: #{theme.fg(divider)};
}

/* Remove conflicting header toolbar styles - let component handle its own styling */

/* Standardized Icon styles - 16px consistently */
.icon-span {
  font-size: 16px;
  height: 16px;
  width: 16px;
  line-height: 16px;
  display: inline-flex;
  align-items: center;
  justify-content: center;
  vertical-align: top;
}

/* App Icon styles - standardized to 16px */
app-icon {
  height: 16px;
  width: 16px;
  font-size: 16px;
  display: inline-flex;
  align-items: center;
  justify-content: center;
  vertical-align: top;
  line-height: 1;
}

/* Button context for icons */
button app-icon,
fluent-button app-icon {
  vertical-align: middle;
}

/* Search context for icons */
.search-buttons app-icon {
  font-size: 16px;
  vertical-align: middle;
}

/* View toggle context for icons */
.view-toggle app-icon,
.pagination-toggle app-icon {
  font-size: 16px;
  vertical-align: middle;
}

/* Specific icon types */
app-icon.warning-icon {
  color: #e76f51; /* theme warning color */
  font-size: 20px;
  margin-right: 8px;
}

app-icon.loading-spinner {
  animation: spin 1s linear infinite;
  color: theme.$primary-color;
  font-size: 20px;
  margin-right: 8px;
}

/* Global styles */
html, body {
  height: 100%;
  margin: 0;
  font-size: 14px;
  // color: theme.c(text); // This was commented out, check if still needed or if var(--fg-text) is enough
  width: 100%;
  max-width: 100%;
  overflow-x: hidden;
  box-sizing: border-box;
}

body {
  margin: 0;
  font-family: theme.$app-font-family;
  color: var(--fg-text, #333); /* Use CSS variable */
  /* background-color: #fafafa; REMOVED - Handled by theme-light/theme-dark */
  transition: background-color 0.3s ease, color 0.3s ease;
}

app-root {
  display: block; // Ensure app-root behaves like a block-level element
  height: 100%; // Ensure it can fill the viewport height if its content does
  background-color: var(--bg-app); // Apply the theme-aware application background
}

/* Ensure all elements use border-box sizing */
*, *::before, *::after {
  box-sizing: border-box;
}

/* Prevent horizontal overflow globally */
.container, .main-content, .page-content {
  width: 100%;
  max-width: 100%;
  overflow-x: hidden;
  box-sizing: border-box;
}

/* Font size system for high information density */
/* Small font size variant - Optimized for information density */
body.font-size-small {
  /* Typography - Using Fluent Design System typography scales */
  h1 {font-size: var(--type-ramp-plus-5-font-size, 1.2rem); margin: 0.5rem 0;}
  h2 {font-size: var(--type-ramp-plus-3-font-size, 1.0rem); margin: 0.4rem 0;}
  h3 {font-size: var(--type-ramp-plus-1-font-size, 0.9rem); margin: 0.3rem 0;}
  h4 {font-size: var(--type-ramp-base-font-size, 0.8rem); margin: 0.25rem 0;}
  h5 {font-size: var(--type-ramp-minus-1-font-size, 0.75rem); margin: 0.2rem 0;}
  h6 {font-size: var(--type-ramp-minus-2-font-size, 0.7rem); margin: 0.15rem 0;}
  p, div, span, a, input, select, textarea {font-size: var(--type-ramp-minus-1-font-size, 0.75rem);}
  .auxiliary-text {font-size: var(--type-ramp-minus-2-font-size, 0.6rem);}
  .table-text {font-size: var(--type-ramp-minus-1-font-size, 0.7rem);}
  .card-text {font-size: var(--type-ramp-minus-1-font-size, 0.72rem);}

  /* Spacing and Layout Density - Use Fluent Design System spacing variables */
  --spacing-xs: var(--design-unit, 4px) * 0.5;
  --spacing-sm: var(--design-unit, 4px);
  --spacing-md: var(--design-unit, 4px) * 1.5;
  --spacing-lg: var(--design-unit, 4px) * 2;
  --spacing-xl: var(--design-unit, 4px) * 3;

  /* Compact containers */
  .section-container, .grid-item {
    padding: var(--spacing-sm);
    margin-bottom: var(--spacing-sm);
  }

  /* Compact tables */
  table.data-table {
    tr {
      height: var(--spacing-lg);
    }
    td, th {
      padding: 0 var(--spacing-sm);
    }
  }

  /* Compact form fields */
  fluent-text-field {
    margin-bottom: var(--spacing-sm);
  }

  /* Page sections */
  .page-container {
    padding: 0.5rem !important;
  }

  /* Reduce gaps in flex containers */
  .flex-container {
    gap: 0.25rem !important;
  }

  /* Compact pagination */
  .pagination {
    gap: 0.125rem !important;
    button {
      padding: 0.25rem 0.5rem !important;
      margin: 0 0.125rem !important;
    }
  }
}

/* Medium font size variant (default) - Balanced layout */
body.font-size-medium {
  /* Typography */
  h1 {font-size: 1.4rem; margin: 1rem 0;}
  h2 {font-size: 1.15rem; margin: 0.875rem 0;}
  h3 {font-size: 1.0rem; margin: 0.75rem 0;}
  h4 {font-size: 0.9rem; margin: 0.625rem 0;}
  h5 {font-size: 0.8rem; margin: 0.5rem 0;}
  h6 {font-size: 0.75rem; margin: 0.375rem 0;}
  p, div, span, a, input, button, select, textarea {font-size: 0.85rem;}
  .auxiliary-text {font-size: 0.7rem;}
  .table-text {font-size: 0.8rem;}
  .card-text {font-size: 0.82rem;}

  /* Spacing and Layout */
  --spacing-xs: 0.25rem;
  --spacing-sm: 0.5rem;
  --spacing-md: 0.75rem;
  --spacing-lg: 1rem;
  --spacing-xl: 1.5rem;

  /* Standard Fluent UI component spacing */
  /* Remove conflicting header toolbar height - let component handle it */

  fluent-button::part(control) {
    height: 36px;
  }

  fluent-menu-item::part(content) {
    min-height: 48px;
    padding: 0 var(--spacing-lg);
  }

  /* Standard cards and containers */
  fluent-card, .section-container, .grid-item {
    padding: var(--spacing-lg);
    margin-bottom: var(--spacing-lg);
  }

  /* Standard tables */
  table.data-table {
    tr {
      height: 48px;
    }
    td, th {
      padding: 0 var(--spacing-md);
    }
  }

  /* Standard form fields */
  fluent-text-field {
    margin-bottom: var(--spacing-lg);
  }

  /* Page sections */
  .page-container {
    padding: var(--spacing-lg);
  }

  /* Standard gaps in flex containers */
  .flex-container {
    gap: var(--spacing-sm);
  }

  /* Standard pagination */
  .pagination {
    gap: var(--spacing-xs);
    button {
      padding: var(--spacing-sm) var(--spacing-md);
      margin: 0 var(--spacing-xs);
    }
  }
}

/* Large font size variant - Accessibility focused with generous spacing */
body.font-size-large {
  /* Typography - Using Fluent type ramp with larger scale */
  h1 {font-size: var(--type-ramp-plus-6-font-size, 1.6rem); margin: 1.5rem 0;}
  h2 {font-size: var(--type-ramp-plus-5-font-size, 1.3rem); margin: 1.25rem 0;}
  h3 {font-size: var(--type-ramp-plus-3-font-size, 1.1rem); margin: 1rem 0;}
  h4 {font-size: var(--type-ramp-plus-2-font-size, 0.95rem); margin: 0.875rem 0;}
  h5 {font-size: var(--type-ramp-plus-1-font-size, 0.85rem); margin: 0.75rem 0;}
  h6 {font-size: var(--type-ramp-base-font-size, 0.8rem); margin: 0.625rem 0;}
  p, div, span, a, input, select, textarea {font-size: var(--type-ramp-plus-1-font-size, 0.9rem); line-height: 1.6;}
  .auxiliary-text {font-size: var(--type-ramp-minus-1-font-size, 0.75rem);}
  .table-text {font-size: var(--type-ramp-base-font-size, 0.85rem);}
  .card-text {font-size: var(--type-ramp-plus-1-font-size, 0.87rem);}

  /* Spacing and Layout - Using Fluent UI design tokens with increased scale */
  --spacing-xs: calc(var(--design-unit, 4px) * 2);
  --spacing-sm: calc(var(--design-unit, 4px) * 3);
  --spacing-md: calc(var(--design-unit, 4px) * 4);
  --spacing-lg: calc(var(--design-unit, 4px) * 6);
  --spacing-xl: calc(var(--design-unit, 4px) * 8);

  /* Larger toolbar and controls */
  /* Remove conflicting header toolbar height - let component handle it */

  fluent-button::part(control) {
    height: 44px;
    padding: 0 var(--spacing-lg);
    min-width: 44px;
  }

  fluent-menu-item::part(content) {
    min-height: 56px;
    padding: 0 var(--spacing-xl);
  }

  /* Spacious cards and containers */
  fluent-card, .section-container, .grid-item {
    padding: var(--spacing-xl);
    margin-bottom: var(--spacing-xl);
    border-radius: var(--radius-lg, 8px);
  }

  /* Spacious tables */
  table.data-table {
    tr {
      height: 56px;
    }
    td, th {
      padding: 0 var(--spacing-lg);
    }
  }

  /* Spacious form fields */
  fluent-text-field {
    margin-bottom: var(--spacing-xl);
  }

  /* Page sections with extra padding */
  .page-container {
    padding: var(--spacing-xl);
  }

  /* Larger gaps in flex containers */
  .flex-container {
    gap: var(--spacing-lg);
  }

  /* Spacious pagination */
  .pagination {
    gap: var(--spacing-sm);
    button {
      padding: var(--spacing-md) var(--spacing-lg);
      margin: 0 var(--spacing-sm);
      min-width: 44px;
      min-height: 44px;
    }
  }

  /* Increase touch targets for accessibility */
  button, a, .clickable {
    min-height: 44px;
    min-width: 44px;
  }

  /* Extra spacing between sections */
  section + section {
    margin-top: var(--spacing-xl);
  }
}

/* Dark theme - Using Fluent UI design tokens */
body.theme-dark {
  // Define Fluent UI tokens first (or ensure they are available from :root if preferred globally)
  --neutral-layer-1: #11100f; // Explicitly define the base color token here if not in :root
  --colorNeutralForeground1: #f5f5f5;
  --colorNeutralForeground2: #e1dfdd;
  --colorNeutralForeground3: #c8c6c4;
  --colorNeutralForegroundHint: #a19f9d;
  --colorNeutralForegroundOnBrand: #ffffff;
  --colorNeutralForegroundInverted: #11100f;

  --colorNeutralBackground1: #292827;
  --colorNeutralBackground1Hover: #323130;
  --colorNeutralBackground1Pressed: #3b3a39;
  --colorNeutralBackground2: #201f1e;
  --colorNeutralBackground3: #323130;
  --colorNeutralBackground4: #484644;
  --colorNeutralBackground5: #605e5c;
  --colorNeutralBackground6: #797775;

  --colorNeutralBackgroundInverted: #f5f5f5;
  --colorNeutralBackgroundStatic: #323130;

  --colorNeutralStroke1: #605e5c;
  --colorNeutralStroke1Hover: #797775;
  --colorNeutralStroke1Pressed: #8a8886;
  --colorNeutralStroke2: #484644;
  --colorNeutralStroke3: #3b3a39;
  --colorNeutralStrokeAccessible: #8a8886;
  --colorNeutralStrokeOnBrand: #ffffff;
  --colorNeutralStrokeDisabled: #484644;

  --colorBrandBackground: #0078d4;
  --colorBrandBackgroundHover: #106ebe;
  --colorBrandBackgroundPressed: #005a9e;
  --colorBrandBackgroundSelected: #005a9e;
  --colorBrandForeground1: #479ef5;
  --colorBrandForeground2: #0078d4;
  --colorBrandStroke1: #479ef5;
  --colorBrandStroke2: #0078d4;

  --colorSubtleBackground: transparent;
  --colorSubtleBackgroundHover: #323130;
  --colorSubtleBackgroundPressed: #3b3a39;
  --colorSubtleBackgroundSelected: #3b3a39;

  --colorTransparentBackground: transparent;
  --colorTransparentBackgroundHover: #323130;
  --colorTransparentBackgroundPressed: #3b3a39;
  --colorTransparentBackgroundSelected: #3b3a39;

  --borderRadiusNone: 0;
  --borderRadiusSmall: 2px;
  --borderRadiusMedium: 4px;
  --borderRadiusLarge: 6px;
  --borderRadiusXLarge: 8px;
  --borderRadiusCircular: 10000px;

  /* Application theme variables based on Fluent UI tokens */
  --bg-app: #11100f; /* Directly use the desired dark color for app background */
  --bg-card: var(--colorNeutralBackground1, #292827);
  --bg-hover: var(--colorNeutralBackground1Hover, #323130);
  --bg-surface: var(--neutral-layer-floating, #292827); // Assuming --neutral-layer-floating would be defined similarly to --neutral-layer-1
  --bg-elevated: var(--colorNeutralBackground4, #484644);
  --bg-card-alt: var(--colorNeutralBackground2, #201f1e);
  --fg-text: var(--colorNeutralForeground1, #f5f5f5);
  --fg-secondary-text: var(--colorNeutralForeground3, #c8c6c4);
  --fg-tertiary-text: var(--colorNeutralForegroundHint, #a19f9d);
  --fg-divider: var(--colorNeutralStroke2, #484644);
  --fg-border: var(--colorNeutralStroke1, #605e5c);
  --primary-color: var(--colorBrandBackground, #0078d4);
  --primary-hover-color: var(--colorBrandBackgroundHover, #106ebe);
  --primary-light-color: var(--colorNeutralStroke1, #605e5c);
  --secondary-color: var(--colorNeutralForeground3, #c8c6c4);
  --success-color: var(--success-foreground-rest, #107c10);
  --warning-color: var(--warning-foreground-rest, #ffb900);
  --error-color: var(--error-foreground-rest, #d13438);
  --info-color: var(--colorBrandBackground, #0078d4);
  --link-color: var(--colorBrandForeground1, #479ef5);
  --link-hover-color: var(--colorBrandBackgroundHover, #106ebe);
  --code-bg: var(--colorNeutralBackground2, #201f1e);

  /* Disabled state variables for dark theme */
  --bg-disabled: var(--colorNeutralBackground2, #201f1e);
  --fg-disabled: var(--colorNeutralForegroundHint, #a19f9d);
  --fg-border-disabled: var(--colorNeutralStroke2, #484644);

  /* Dark mode syntax highlighting - Override highlight.js default theme */
  .hljs {
    background: var(--code-bg, #201f1e) !important;
    color: var(--fg-text, #f5f5f5) !important;
  }

  .hljs-keyword,
  .hljs-selector-tag,
  .hljs-literal,
  .hljs-section,
  .hljs-link {
    color: #569cd6 !important; /* Blue keywords */
  }

  .hljs-string,
  .hljs-attr {
    color: #ce9178 !important; /* Orange strings */
  }

  .hljs-number,
  .hljs-regexp,
  .hljs-addition {
    color: #b5cea8 !important; /* Green numbers */
  }

  .hljs-built_in,
  .hljs-builtin-name,
  .hljs-variable,
  .hljs-template-variable,
  .hljs-type,
  .hljs-class .hljs-title {
    color: #4ec9b0 !important; /* Cyan built-ins */
  }

  .hljs-comment,
  .hljs-quote,
  .hljs-deletion,
  .hljs-meta {
    color: #6a9955 !important; /* Green comments */
  }

  .hljs-property,
  .hljs-attribute {
    color: #9cdcfe !important; /* Light blue properties */
  }

  .hljs-function .hljs-title,
  .hljs-title.function_ {
    color: #dcdcaa !important; /* Yellow functions */
  }

  .hljs-tag {
    color: var(--fg-text, #f5f5f5) !important;
  }

  .hljs-name {
    color: #569cd6 !important;
  }

  .hljs-emphasis {
    font-style: italic;
  }

  .hljs-strong {
    font-weight: bold;
  }

  /* Dark theme Fluent UI components */
  .header-toolbar {
    background-color: var(--bg-elevated);
    color: var(--fg-text);
    border-bottom: 1px solid var(--fg-divider);
  }

  /* Fluent UI Button overrides for dark mode */
  fluent-button::part(control) {
    color: var(--colorNeutralForeground1);
    background-color: var(--colorSubtleBackground);
    border: 1px solid var(--colorNeutralStroke1);

    &:hover {
      background-color: var(--colorSubtleBackgroundHover);
      border-color: var(--colorNeutralStroke1Hover);
    }

    &:active {
      background-color: var(--colorSubtleBackgroundPressed);
    }
  }

  /* Fluent UI Text Field overrides for dark mode */
  fluent-text-field::part(control) {
    background-color: var(--colorNeutralBackground1) !important;
    color: var(--colorNeutralForeground1) !important;
    border-color: var(--colorNeutralStroke1) !important;

    &:hover {
      border-color: var(--colorNeutralStroke1Hover) !important;
    }

    &:focus {
      border-color: var(--colorBrandStroke1) !important;
      box-shadow: 0 0 0 1px var(--colorBrandStroke1) !important;
    }

    &::placeholder {
      color: var(--colorNeutralForeground3) !important;
    }
  }

  fluent-menu::part(root) {
    background-color: var(--colorNeutralBackground1);
    color: var(--colorNeutralForeground1);
    border: 1px solid var(--colorNeutralStroke1);
    box-shadow: 0 8px 16px rgba(0, 0, 0, 0.3);
  }

  fluent-menu-item::part(content) {
    color: var(--colorNeutralForeground1);

    &:hover {
      background-color: var(--colorNeutralBackground1Hover);
    }

    &.active {
      background-color: var(--colorBrandBackground);
      color: var(--colorNeutralForegroundOnBrand);
    }
  }

  /* Enhanced app-icon styling for dark mode */
  app-icon {
    color: var(--colorNeutralForeground1);

    /* SVG icon inversion for dark mode */
    svg {
      filter: invert(1);
    }

    /* Preserve currentColor icons without inversion */
    svg[fill*="currentColor"] {
      filter: none;
    }

    /* Ensure proper color inheritance in different contexts */
    &.warning-icon {
      color: var(--warning-foreground-rest, #ffb900);
    }

    &.loading-spinner {
      color: var(--colorBrandBackground, #0078d4);
    }
  }

  /* Global SVG inversion for dark mode (excluding logos and specific elements) */
  svg:not(.logo):not([data-no-invert]) {
    filter: invert(1);
  }

  /* Preserve currentColor SVGs without inversion */
  svg[fill*="currentColor"]:not(.logo):not([data-no-invert]) {
    filter: none;
  }

  /* Exclude logo images from inversion */
  .logo,
  .title-logo,
  img[src*="logo"] {
    filter: none !important;
  }

  /* Button context icons */
  fluent-button app-icon,
  button app-icon {
    color: inherit; /* Inherit from button color */
  }

  /* Accent button icons should be white */
  fluent-button[appearance="accent"] app-icon,
  button.accent app-icon {
    color: var(--colorNeutralForegroundOnBrand, #ffffff);
  }

  /* Navigation and interactive element icons */
  .header-toolbar app-icon,
  .nav-item app-icon,
  .menu-item app-icon {
    color: var(--colorNeutralForeground2, #e1dfdd);
  }

  /* Form and input related icons */
  .search-container app-icon,
  .input-group app-icon {
    color: var(--colorNeutralForeground3, #c8c6c4);
  }

  /* Button and interactive elements in dark mode */
  fluent-button::part(control) {
    &.accent {
      background-color: var(--colorBrandBackground);
      color: var(--colorNeutralForegroundOnBrand);
      border-color: var(--colorBrandBackground);

      &:hover {
        background-color: var(--colorBrandBackgroundHover);
        border-color: var(--colorBrandBackgroundHover);
      }
    }
  }

  /* Cards and containers */
  .section-container {
    background-color: var(--bg-card);
    border: 1px solid var(--fg-border);
  }

  /* Tables and data display */
  table.data-table {
    background-color: var(--bg-card);
    color: var(--fg-text);
  }

  /* Chips and badges */
  fluent-badge {
    background-color: var(--bg-hover);
    color: var(--fg-text);
  }

  /* Cards */
  fluent-card {
    background-color: var(--bg-card);
    color: var(--fg-text);
  }

  /* Override hardcoded colors in components with Fluent UI design tokens */
  .grid-item,
  .registry-card,
  .page-container {
    background-color: var(--bg-card);
    color: var(--fg-text);
    border-color: var(--fg-border);
  }

  /* Pagination and navigation */
  .pagination button {
    background-color: var(--bg-hover);
    color: var(--fg-text);
    border-color: var(--fg-border);

    &:hover {
      background-color: var(--bg-elevated);
    }

    &.active {
      background-color: var(--primary-color);
      color: var(--colorNeutralForegroundOnBrand, #ffffff);
    }
  }

  /* Links and interactive text */
  a:not(.mat-mdc-button):not(.mat-mdc-tab-link) {
    color: var(--link-color) !important;

    &:hover {
      color: var(--link-hover-color) !important;
    }
  }

  /* Code blocks and pre elements */
  pre,
  code {
    background-color: var(--code-bg) !important;
    color: var(--fg-text) !important;
    border-color: var(--fg-border) !important;
  }

  /* Dividers and borders */
  hr,
  .divider {
    border-color: var(--fg-border) !important;
  }

  /* Resource and group table overrides */
  .resources-table,
  .group-types-table {
    background-color: var(--bg-card) !important;
    color: var(--fg-text) !important;

    th, td {
      border-color: var(--fg-divider) !important;
      color: var(--fg-text) !important;
    }

    th {
      background-color: var(--bg-elevated) !important;
      color: var(--fg-secondary-text) !important;
    }

    tr:hover td {
      background-color: var(--bg-hover) !important;
    }

    a {
      color: var(--link-color) !important;
    }
  }

  /* Attribute and object styling */
  .attribute {
    color: var(--fg-text) !important;

    strong {
      color: var(--fg-text) !important;
    }

    span {
      color: var(--fg-text) !important;
    }

    pre {
      background-color: var(--code-bg) !important;
      color: var(--fg-text) !important;
      border-color: var(--fg-border) !important;
    }

    .object-array {
      background-color: var(--bg-hover) !important;
      border-color: var(--fg-border) !important;
      color: var(--fg-text) !important;

      .object-item {
        border-color: var(--fg-divider) !important;
      }

      .detail-label {
        color: var(--fg-secondary-text) !important;

        .detail-value {
          color: var(--fg-text) !important;
        }
      }
    }
  }

  /* Document item styling */
  .resource-document-item {
    .unified-item-row {
      background-color: var(--bg-elevated) !important;
      border-color: var(--fg-border) !important;
      color: var(--fg-text) !important;

      strong {
        color: var(--fg-text) !important;
      }

      .item-count,
      .item-description {
        color: var(--fg-secondary-text) !important;
      }

      .item-model-type {
        background-color: var(--bg-hover) !important;
        border-color: var(--fg-border) !important;
        color: var(--info-color) !important;
      }
    }

    .expanded-content {
      background-color: var(--bg-elevated) !important;
      border-color: var(--fg-border) !important;

      .empty-notice {
        color: var(--fg-secondary-text) !important;
      }
    }

    .simple-attribute-container {
      background-color: var(--bg-elevated) !important;

      .attribute-header {
        strong {
          color: var(--fg-secondary-text) !important;
        }

        .attribute-type {
          background-color: var(--bg-card) !important;
          border-color: var(--fg-border) !important;
          color: var(--fg-text) !important;
        }

        .attribute-description {
          color: var(--fg-secondary-text) !important;
        }
      }

      .attribute-value {
        span:not(.copy-btn) {
          background-color: var(--bg-card) !important;
          border-color: var(--fg-border) !important;
          color: var(--fg-text) !important;

          &.null-value {
            color: var(--fg-tertiary-text) !important;
          }

          &.undefined-value {
            color: var(--primary-color) !important;
          }
        }
      }
    }
  }

  /* Tile styling */
  .tile {
    background-color: var(--primary-color) !important;
    color: #1a1a1a !important;

    &:hover {
      background-color: var(--primary-hover-color) !important;
    }
  }

  .tile-footer {
    border-color: var(--fg-divider) !important;
    color: var(--fg-secondary-text) !important;
  }

  /* Resource type pills */
  .resource-type-pill {
    background-color: var(--bg-hover) !important;
    color: var(--fg-secondary-text) !important;
  }

  /* Section styling */
  section {
    background-color: var(--bg-elevated) !important;
    color: var(--fg-text) !important;

    h3 {
      color: var(--fg-text) !important;
    }

    pre {
      background-color: var(--code-bg) !important;
      color: var(--fg-text) !important;
      border-color: var(--fg-border) !important;
    }

    .loading-document {
      background-color: var(--bg-hover) !important;
      color: var(--info-color) !important;
    }

    .document-error {
      background-color: var(--bg-hover) !important;
      color: var(--error-color) !important;
    }

    .download-btn {
      background-color: var(--primary-color) !important;
      color: #1a1a1a !important;

      &:hover {
        background-color: var(--primary-hover-color) !important;
      }
    }
  }

  background-color: var(--bg-app) !important; /* This should now work */
  color: var(--neutral-foreground-rest, #f5f5f5); // This was var(--colorNeutralForeground1) but --neutral-foreground-rest is common for body text

  /* View toggle button styling for dark mode */
  .view-toggle {
    fluent-button[aria-pressed="true"],
    fluent-button.active,
    fluent-button.selected,
    button[aria-pressed="true"],
    button.active,
    button.selected,
    fluent-button[aria-pressed="true"]:hover,
    fluent-button.active:hover,
    fluent-button.selected:hover,
    button[aria-pressed="true"]:hover,
    button.active:hover,
    button.selected:hover {
      background-color: var(--colorNeutralBackgroundInverted, #f5f5f5) !important; // Light background
      color: var(--colorNeutralForegroundInverted, #11100f) !important;          // Dark text/icon
      border-color: var(--primary-color, #0078d4) !important;                   // Primary color border

      svg {
        fill: var(--colorNeutralForegroundInverted, #11100f) !important;
        filter: none !important; // Ensure no further inversion if we explicitly set a dark fill
      }
    }
  }
}

/* Light theme (default) */
body.theme-light {
  --bg-app: #fafafa; /* Define for light theme too */
  background-color: var(--bg-app);
  color: #333;
  --bg-card: white;
  --bg-hover: #f5f5f5;
  --bg-surface: white;
  --bg-elevated: #f8f9fa;
  --bg-card-alt: #f5f5f5; /* Alternative card background for code blocks */
  --fg-text: #333333;
  --fg-secondary-text: #666666;
  --fg-tertiary-text: #999999;
  --fg-divider: #e0e0e0;
  --fg-border: #dee2e6;
  --primary-color: #5e5ce6;
  --success-color: #28a745;
  --warning-color: #ffc107;
  --error-color: #dc3545;
  --info-color: #17a2b8;
  --link-color: #6c757d;
  --code-bg: #f8f9fa;

  /* Disabled state variables for light theme (using existing or new fallbacks) */
  --bg-disabled: #f3f2f1; /* Default light theme disabled background */
  --fg-disabled: #a19f9d; /* Default light theme disabled foreground */
  --fg-border-disabled: #c8c6c4; /* Default light theme disabled border */
}

/* Common utility classes */
.spacer {
  flex: 1 1 auto;
}

/* Layout styles - no centering, consistent alignment */
.app-container {
  display: flex;
  flex-direction: column;
  min-height: 100vh;
  position: relative;
  background-color: var(--bg-app);
  color: var(--fg-text, #333);
}

/* Unified header section - no visual separation */
.app-content {
  display: flex;
  flex-direction: column;
  flex: 1;
}

/* Global theme-aware element overrides */
* {
  /* Override any hardcoded colors with theme variables */
  &:not(fluent-button):not(fluent-button[appearance="accent"]):not(fluent-button[appearance="outline"]) {
    border-color: var(--fg-border, #dee2e6);
  }
}

/* Theme-aware link styling */
a:not(fluent-anchor) {
  color: var(--link-color, #6c757d);

  &:hover {
    opacity: 0.8;
  }
}

/* Theme-aware code styling */
pre,
code {
  background-color: var(--code-bg, #f8f9fa) !important;
  color: var(--fg-text, #333) !important;
  border-color: var(--fg-border, #dee2e6) !important;
}

/* Theme-aware badge and chip styling */
.badge,
.chip,
.status-badge {
  background-color: var(--bg-elevated, #f8f9fa) !important;
  color: var(--fg-text, #333) !important;
  border-color: var(--fg-border, #dee2e6) !important;
}

/* Success state styling */
.success {
  background-color: var(--success-color, #28a745) !important;
  color: white !important;
}

/* Warning state styling */
.warning {
  background-color: var(--warning-color, #ffc107) !important;
  color: #212529 !important;
}

/* Error state styling */
.error {
  background-color: var(--error-color, #dc3545) !important;
  color: white !important;
}

/* Info state styling */
.info {
  background-color: var(--info-color, #17a2b8) !important;
  color: white !important;
}

/* Override section containers */
.section-container {
  width: 100%;
  background-color: var(--bg-card, #fff);
  border-radius: 6px;
  box-shadow: 0 2px 6px rgba(0, 0, 0, 0.06);
  padding: 0.9rem;
  margin-bottom: 0.9rem;
}

/* Override grid items */
.grid-item {
  background-color: var(--bg-card, white) !important;
  color: var(--fg-text, #333) !important;
  border-color: var(--fg-border, #dee2e6) !important;
}

/* Basic button styling for non-Fluent buttons */
button:not(fluent-button) {
  background-color: var(--bg-elevated, #f8f9fa);
  color: var(--fg-text, #333);
  border-color: var(--fg-border, #dee2e6);

  &:hover {
    background-color: var(--bg-hover, #f5f5f5);
  }

  &.primary {
    background-color: var(--primary-color, #0078d4);
    color: white;
  }
}

/* Global layout constraints - prevent ultra-wide stretching */
.layout-container {
  width: 100%;
  margin: 0 auto;
  padding-left: 0;
  padding-right: 0;
  box-sizing: border-box;
}

/* Header, breadcrumb, and content alignment */
.main-container {
  width: 100%;
  display: flex;
  flex-direction: column;
  flex: 1;
  min-height: 0; /* Allow flex shrinking */
  overflow: visible; /* Allow popups to overflow */
}

/* Content area wrapper with natural height */
.main-container > * {
  width: 100%;
  max-width: 100%;
  box-sizing: border-box;
  flex: 0 0 auto; /* Don't allow components to expand to fill height */
}

/* Router outlet content should align to top */
router-outlet + * {
  height: auto;
  display: flex;
  flex-direction: column;
  align-items: flex-start;
  justify-content: flex-start;
}

/* Consistent inner content width */
.content-wrapper {
  width: 100%;
  margin: 0 auto;
  padding: 0;
  box-sizing: border-box;
}

/* Page structure - consistent spacing */
.page-structure {
  display: flex;
  flex-direction: column;
  gap: 0.75rem; /* Reduced for higher density */
  padding: 0.5rem 0 80px 0; /* Minimal top padding, account for footer */
  width: 100%;
}

/* Responsive adjustments */
@media (max-width: 768px) {
  .layout-container,
  .content-wrapper {
    padding-left: 0.75rem;
    padding-right: 0.75rem;
  }

  .page-structure {
    gap: 0.5rem;
    padding: 0.5rem 0;
  }
}

@media (max-width: 480px) {
  .layout-container,
  .content-wrapper {
    padding-left: 0.5rem;
    padding-right: 0.5rem;
  }
}

/* Page layout styles for components */
.page-container {
  width: 100%;
  display: flex;
  flex-direction: column;
  gap: 1.5rem;
}

.page-header {
  margin-bottom: 0.4rem;
}

.page-header h2 {
  font-size: 1.05rem;
  margin-bottom: 0.2rem;
  margin-top: 0.2rem;
  font-weight: 600;
}

.page-content {
  display: flex;
  flex-direction: column;
  gap: 0.8rem;
}

.section-container {
  width: 100%;
  background-color: #fff;
  border-radius: 6px;
  box-shadow: 0 2px 6px rgba(0, 0, 0, 0.06);
  padding: 0.9rem;
  margin-bottom: 0.9rem;
}

/* Loading animation for smoother transitions */
.content-loading {
  width: 100%;
  padding: 2rem;
  display: flex;
  justify-content: center;
  align-items: center;
}

.loading-spinner {
  width: 40px;
  height: 40px;
  border: 4px solid rgba(63, 81, 181, 0.1);
  border-radius: 50%;
  border-top-color: theme.$primary-color;
  animation: spin 1s ease-in-out infinite;
}

@keyframes spin {
  to { transform: rotate(360deg); }
}

/* API info styles */
/* API info styles when displayed in the main content */
:not(app-header) > .api-info-container {
  padding: 8px 16px;
  background-color: map.get(theme.$background-color, hover);
  border-bottom: 1px solid map.get(theme.$foreground-color, divider);
}

/* API info styles when displayed in the header */
app-header .api-info-container {
  padding: 0;
  background-color: transparent;
  border-bottom: none;
}

.api-chip {
  font-size: 12px;
  line-height: normal;
  display: flex;
  align-items: center;
}

/* Configuration styles */
.config-card {
  max-width: 600px;
  margin: 20px auto;
}

.full-width {
  width: 100%;
}

.button-row {
  display: flex;
  gap: 10px;
  margin-top: 20px;
}

/* Registry explorer styles */
.registry-container {
  margin: 1rem;
}

.registry-header {
  display: flex;
  align-items: center;
  margin-bottom: 1rem;
}

.registry-card {
  margin-bottom: 1rem;
  background-color: map.get(theme.$background-color, card);
}

.resource-item {
  cursor: pointer;
  &:hover {
    background-color: map.get(theme.$background-color, hover);
  }
}

/* Resources component styles */
app-resources .resources {
  h2 {
    margin-bottom: 1.2rem;
    font-size: 1.5rem;
    font-weight: 600;
    color: map.get(theme.$foreground-color, text);
  }
}

app-resources .grid-container {
  display: flex;
  flex-wrap: wrap;
  gap: 1.2rem;
  justify-content: flex-start;
  padding: 16px;
}

app-resources .grid-item {
  background: map.get(theme.$background-color, card);
  border-radius: 10px;
  box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);
  border: 1px solid map.get(theme.$foreground-color, divider);
  min-width: 340px;
  max-width: 420px;
  flex: 1 1 340px;
  padding: 1.2rem 1.2rem 0.7rem 1.2rem;
  display: flex;
  flex-direction: column;
  margin-bottom: 0.5rem;
  transition: transform 0.2s, box-shadow 0.2s;
}

app-resources .grid-item:hover {
  transform: translateY(-4px);
  box-shadow: 0 8px 16px rgba(0, 0, 0, 0.1);
}

/* Resources component styles */
.resources {
  h2 {
    margin-bottom: 1.2rem;
    font-size: 1.5rem;
    font-weight: 600;
    color: map.get(theme.$foreground-color, text);
  }
}

.grid-container {
  display: flex;
  flex-wrap: wrap;
  gap: 1.2rem;
  justify-content: flex-start;
  padding: 16px;
}

.grid-item {
  background: map.get(theme.$background-color, card);
  border-radius: 10px;
  box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);
  border: 1px solid map.get(theme.$foreground-color, divider);
  min-width: 340px;
  max-width: 420px;
  flex: 1 1 340px;
  padding: 1.2rem 1.2rem 0.7rem 1.2rem;
  display: flex;
  flex-direction: column;
  margin-bottom: 0.5rem;
  transition: transform 0.2s, box-shadow 0.2s;
}

.grid-item:hover {
  transform: translateY(-4px);
  box-shadow: 0 8px 16px rgba(0, 0, 0, 0.1);
}

.attribute {
  display: flex;
  align-items: flex-start;
  margin-bottom: 0.3rem;
  font-size: 0.98rem;
  line-height: 1.4;
  flex-direction: column;
}

.attribute strong {
  font-weight: 600;
  color: map.get(theme.$foreground-color, secondary-text);
  margin-right: 0.5em;
  text-align: left;
  min-width: unset;
  flex-shrink: unset;
  display: inline;
}

.attribute pre {
  font-family: monospace;
  max-width: 100%;
  max-height: 200px;
  overflow: auto;
  white-space: pre-wrap;
}

.attribute span {
  color: map.get(theme.$foreground-color, text);
  margin: 0;
  background: none;
  border: none;
  padding: 0;
  white-space: pre-wrap;
  word-break: break-word;
  display: inline;
}

.attribute .object-array {
  background: map.get(theme.$background-color, hover);
  border-radius: 5px;
  padding: 0.7em 1em;
  margin: 0.3em 0 0.7em 0;
  font-size: 0.97rem;
  border: 1px solid rgba(0, 0, 0, 0.05);
}

.attribute .object-array .object-item {
  margin-bottom: 0.7em;
  padding-bottom: 0.7em;
  border-bottom: 1px solid map.get(theme.$foreground-color, divider);
}

.attribute .object-array .object-item:last-child {
  border-bottom: none;
  margin-bottom: 0;
  padding-bottom: 0;
}

.attribute .object-array .object-field {
  display: flex;
  align-items: flex-start;
  margin-bottom: 0.2em;
}

.attribute .object-array .object-field strong {
  min-width: 110px;
  margin-right: 0.5em;
  color: rgba(0, 0, 0, 0.5);
  font-weight: 500;
}

.attribute .object-array .object-field span, .attribute .object-array .object-field pre {
  display: inline;
}

.attribute p {
  margin: 0;
  display: flex;
  align-items: flex-start;
}

h3 {
  font-size: 1.15rem;
  font-weight: 700;
  margin-bottom: 0.7rem;
  color: theme.$primary-color;
  word-break: break-all;
}

h4 {  font-size: 1.02rem;
  font-weight: 600;
  margin: 0.7em 0 0.2em 0;
  color: theme.$accent-color;
}

.tile {
  display: inline-block;
  margin-top: 8px;
  padding: 8px 16px;
  background-color: theme.$primary-color;
  color: white;
  text-decoration: none;
  border-radius: 4px;
  transition: background-color 0.2s;
}

.tile:hover {
  background-color: color.adjust(theme.$primary-color, $lightness: -10%);
}

.tile-footer {
  margin-top: 1.1em;
  border-top: 1px solid rgba(0, 0, 0, 0.05);
  padding-top: 0.5em;
  color: rgba(0, 0, 0, 0.5);
  font-size: 0.93em;
  display: flex;
  justify-content: flex-end;
}

.group-header {
  margin-top: 1.5rem;
  margin-bottom: 0.5rem;
  font-weight: 500;
  color: map.get(theme.$foreground-color, text);
}

/* Table and content container styles */
.content-container {
  padding: 16px;
}

table.data-table {
  width: 100%;
}

.filter-container {
  display: flex;
  justify-content: space-between;
  align-items: center;
  margin-bottom: 16px;
}

.column-actions {
  width: 120px;
  text-align: right;
}

/* Footer styles */
.footer {
  padding: 1rem;
  background-color: map.get(theme.$background-color, app-bar);
  text-align: center;
  margin-top: auto;
  border-top: 1px solid map.get(theme.$foreground-color, divider);
  width: 100%;
  box-sizing: border-box;

  a {    color: theme.$primary-color;
    text-decoration: none;
    margin-left: 8px;

    &:hover {
      text-decoration: underline;
      color: color.adjust(theme.$primary-color, $lightness: -10%);
    }
  }
}

/* Form styles */
.form-field {
  width: 100%;
  margin-bottom: 1rem;
}

.form-actions {
  display: flex;
  justify-content: flex-end;
  gap: 0.5rem;
  margin-top: 1rem;
}

/* Details page styles */
.details-header {
  display: flex;
  justify-content: space-between;
  align-items: center;
  margin-bottom: 1rem;
}

.details-card {
  margin-bottom: 1rem;
  background-color: map.get(theme.$background-color, card);
}

.details-section {
  margin-top: 1.5rem;
}

.metadata-table {
  width: 100%;

  th {
    font-weight: 500;
    text-align: left;
    padding: 0.5rem;
    width: 200px;
    color: map.get(theme.$foreground-color, secondary-text);
    border-bottom: 1px solid map.get(theme.$foreground-color, divider);
  }

  td {
    padding: 0.5rem;
    border-bottom: 1px solid rgba(0, 0, 0, 0.05);
  }

  tr:nth-child(even) {
    background-color: map.get(theme.$background-color, hover);
  }
}

/* Responsive styles */
@media (max-width: 768px) {
  .filter-container {
    flex-direction: column;
    align-items: flex-start;
  }

  .column-actions {
    width: 80px;
  }

  .metadata-table {
    th {
      width: 120px;
    }
  }
}

/* Tiles styles */
.tiles-container {
  display: flex;
  flex-wrap: wrap;
  gap: 1rem;
  margin-top: 1rem;
}

/* Typography utility classes */
.text-xs { font-size: 0.75rem; }
.text-s  { font-size: 0.875rem; }
.text-m  { font-size: 1rem; }
.text-l  { font-size: 1.125rem; }
.text-xl { font-size: 1.25rem; }

/* Badge styling */
.badge {
  @extend %badge;
}

.copy-btn {
  background: none;
  display: inline-flex;
  border: none;
  padding: 2px 4px;
  margin-left: 4px;
  cursor: pointer;
  vertical-align: middle;
  color: var(--fg-secondary-text, #888);
  border-radius: 3px;
  font-size: 1em;
  line-height: 1;
  align-items: center;
  transition: background 0.15s, color 0.15s;
  float: right; // Float the button to the right of its container

  &:hover, &:focus {
    background: var(--bg-hover, #f0f0f0);
    color: var(--fg-text, #222);
    outline: none;
  }
}

.groups {
  width: 100%;
  margin: 0 auto;
}

/* Make footer sticky at bottom */
app-footer {
  position: fixed;
  bottom: 0;
  left: 0;
  right: 0;
  z-index: 1000;
  background: var(--bg-card, white);
  border-top: 1px solid var(--fg-divider, #e0e0e0);
  box-shadow: 0 -2px 4px rgba(0,0,0,0.1);
}

/* List and item spacing adjustments */
body.font-size-small {
  ul, ol {
    padding-left: 1rem;
    margin: 0.25rem 0;

    li {
      margin-bottom: 0.125rem;
    }
  }

  dl {
    margin: 0.25rem 0;

    dt {
      margin-top: 0.25rem;
    }

    dd {
      margin-left: 0.75rem;
      margin-bottom: 0.125rem;
    }
  }
}

body.font-size-large {
  ul, ol {
    padding-left: 2rem;
    margin: 1rem 0;

    li {
      margin-bottom: 0.5rem;
    }
  }

  dl {
    margin: 1rem 0;

    dt {
      margin-top: 0.75rem;
    }

    dd {
      margin-left: 1.5rem;
      margin-bottom: 0.5rem;
    }
  }
}

/* Dialog and modal adjustments */
body.font-size-small {
  fluent-dialog::part(control) {
    padding: 0.75rem;
  }

  fluent-dialog::part(heading) {
    margin: 0 0 0.5rem 0;
  }

  fluent-dialog::part(content) {
    padding: 0.5rem;
  }

  fluent-dialog::part(footer) {
    padding: 0.5rem;
    gap: 0.25rem;
  }
}

body.font-size-large {
  fluent-dialog::part(control) {
    padding: 2rem;
  }

  fluent-dialog::part(heading) {
    margin: 0 0 1.5rem 0;
  }

  fluent-dialog::part(content) {
    padding: 1.5rem;
  }

  fluent-dialog::part(footer) {
    padding: 1.5rem;
    gap: 1rem;
  }
}

/* Chip and badge density adjustments */
body.font-size-small {
  fluent-badge::part(control) {
    height: 24px;
    padding: 0 0.5rem;
    font-size: 0.7rem;
  }

  .badge, .chip, .status-badge {
    padding: 0.125rem 0.375rem;
    font-size: 0.65rem;
  }
}

body.font-size-large {
  fluent-badge::part(control) {
    height: 36px;
    padding: 0 1rem;
    font-size: 0.85rem;
  }

  .badge, .chip, .status-badge {
    padding: 0.375rem 0.75rem;
    font-size: 0.8rem;
  }
}

/* Fix for app-groups alignment issue */
router-outlet + app-groups {
  height: auto !important;
  align-items: flex-start !important;
  justify-content: flex-start !important;
}

/* Fluent menu button icon alignment */
fluent-menu-button app-icon {
  display: inline-flex;
  align-items: center;
  justify-content: center;
  vertical-align: middle;
}

/* Fluent button icon alignment */
fluent-button app-icon {
  display: inline-flex;
  align-items: center;
  justify-content: center;
  vertical-align: middle;
}

/* Fluent UI menu positioning in header */
.header-toolbar fluent-menu-button fluent-menu {
  position: absolute !important;
  top: 100% !important;
  left: auto !important;
  right: 0 !important;
  z-index: 1000 !important;
  transform: none !important;
  margin-top: 4px !important;
}

/* Ensure header menus don't affect layout */
.header-toolbar fluent-menu-button {
  position: relative !important;
}

/* Menu backdrop to prevent layout shifts */
.header-toolbar fluent-menu::part(root) {
  position: fixed !important;
  z-index: 1000 !important;
}
