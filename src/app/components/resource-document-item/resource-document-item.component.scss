@use '../shared-variables' as vars;
@use '../_vertical-bars' as vbars;
@use '../../../styles/theme' as *;

// Animation and mixins
@keyframes flash {
  0% { background-color: rgba(0, 128, 255, 0.3); }
  100% { background-color: transparent; }
}

@mixin item-border($color) {
  border-left: 3px solid $color;
  position: relative;
  &::before {
    content: '';
    position: absolute;
    top: 0;
    bottom: 0;
    left: -3px;
    width: 3px;
    height: 100%;
    background-color: $color;
    z-index: 1;
  }
}

@mixin hover-transition {
  transition: all 0.2s ease;
  &:hover:not(:disabled) {
    background-color: var(--bg-hover, #f1f3f4);
    border-color: var(--fg-border, #d0d7de);
  }
}

@mixin button-style {
  background: transparent;
  border: 1px solid var(--fg-border, #ddd);
  border-radius: 3px;
  padding: 0.25rem;
  cursor: pointer;
  color: var(--fg-secondary-text, #666);
  font-size: vars.$small-size;
  @include hover-transition;

  &:hover {
    background: var(--bg-hover, #f8f9fa);
    border-color: var(--primary-color, #007bff);
    color: var(--primary-color, #007bff);
  }

  i.material-icons {
    font-size: 14px;
    line-height: 1;
  }
}

@mixin attribute-container($color: #28a745) {
  background: var(--bg-elevated, #fafafa);
  border-left: 3px solid $color;
  border-radius: 6px;
  padding: 0.5rem;
  box-shadow: 0 1px 3px rgba(0, 0, 0, 0.1);
  height: fit-content;
}

// Main component
.resource-document-item {
  margin: 0;
  display: block;
  position: relative;
  font-size: $body-size;

  &.nested {
    padding-left: s(xs);
    margin-bottom: 0;
  }
  // Unified row styling
  .unified-item-row {
    display: flex;
    flex-direction: row;
    align-items: center;
    flex-wrap: wrap;
    @include pad-x(xs);
    @include pad-y(xs);
    border-radius: $radius;
    border: 1px solid c(neutral);
    margin-bottom: 0.25rem;

    &.expanded, &.collapsed {
      animation: flash 0.5s ease-out;
    }

    // Simple row styling
    &.simple-row {
      cursor: default;
      background-color: var(--bg-elevated, #fafafa);
      @include item-border(#28a745);
    }

    // Expandable rows
    &.array-row, &.object-row {
      cursor: pointer;
      background-color: var(--bg-hover, #f8f9fa);
      @include hover-transition;

      &.expanded {
        margin-bottom: 0;
        border-bottom-left-radius: 0;
        border-bottom-right-radius: 0;
      }
    }

    // Array-specific styling
    &.array-row {
      @include item-border(#5bc0de);
      &.expanded {
        background-color: rgba(91, 192, 222, 0.1);
        border-bottom-left-radius: 0;
        border-bottom-right-radius: 0;
      }
    }

    // Object-specific styling
    &.object-row {
      @include item-border(#9575cd);
      &.expanded {
        background-color: rgba(149, 117, 205, 0.1);
        border-bottom-left-radius: 0;
        border-bottom-right-radius: 0;
      }
    }

    strong {
      font-weight: 600;
      color: var(--fg-text, #2c3e50);
      margin-right: 0.5rem;
      font-size: vars.$content-size;
    }

    .toggle-icon {
      margin-right: s(xs);
      font-size: calc($body-size * 1.2);
      color: c(dark);
      transition: all 0.2s ease;
      background: transparent;
      border: none;
      cursor: pointer;
      padding: 2px;
      border-radius: $radius;
      z-index: 5;

      &:focus-visible {
        outline: 2px solid c(primary);
        outline-offset: 2px;
      }

      i.material-icons {
        font-size: calc($body-size * 1.2);
        color: inherit;
        transition: all 0.2s ease;
      }

      .expanded & i.material-icons { color: c(primary); }
      .collapsed & i.material-icons { color: c(dark); }
    }

    .item-count {
      color: var(--fg-secondary-text, #6c757d);
      font-size: vars.$small-size;
      margin-right: 0.5rem;
      font-weight: normal;
    }

    .item-model-type {
      color: var(--info-color, #457B9D);
      font-size: vars.$small-size;
      background-color: var(--bg-elevated, #F1FAEE);
      padding: 2px 6px;
      border-radius: 4px;
      border: 1px solid var(--fg-border, #A8DADC);
      margin-right: 0.75rem;
    }

    .item-description {
      color: var(--fg-secondary-text, #6c757d);
      font-size: vars.$small-size;
      font-style: italic;
      white-space: nowrap;
      overflow: hidden;
      text-overflow: ellipsis;
      margin-right: auto;
    }

    .copy-btn {
      margin-left: auto;
      @include button-style;
    }
  }
  // Expanded content styling
  .expanded-content {
    background-color: var(--bg-elevated, rgba(240, 240, 240, 0.3));
    border: 1px solid var(--fg-border, #ddd);
    border-top: none;
    border-radius: 0 0 $radius $radius;
    padding: 0.5rem;

    .array-items, .object-items {
      display: flex;
      flex-direction: column;
      gap: 0.5rem;
      margin: 0;
      padding: 0;
      width: 100%;

      &:empty::after {
        content: 'No items to display';
        text-align: center;
        color: var(--fg-secondary-text, #6c757d);
        font-style: italic;
        padding: 1.5rem; // Reduced from 2rem for compactness
      }
    }

    // Simple items section - horizontal tile layout
    .simple-items-section {
      width: 100%;
      margin-bottom: 0.25rem;

      .simple-items-grid {
        display: grid;
        grid-template-columns: repeat(auto-fill, minmax(200px, 1fr));
        gap: 0.5rem;
        width: 100%;

        // Make each resource-document-item use the grid layout
        app-resource-document-item {
          width: 100%;
          display: block;

          // Ensure the simple-attribute-grid fills the grid cell
          ::ng-deep .simple-attribute-grid {
            height: 100%;
            width: 100%;
          }
        }
      }
    }

    // Complex items section - full width layout
    .complex-items-section {
      width: 100%;

      .complex-items-container {
        display: flex;
        flex-direction: column;
        gap: 0.5rem;
        width: 100%;

        // Make complex items fill full width
        app-resource-document-item {
          width: 100%;
          display: block;
        }
      }
    }

    // Separator between simple and complex items
    .items-separator {
      position: relative;
      margin: 0.25rem 0;
      text-align: center;
      width: 100%;

      hr {
        border: 0;
        height: 1px;
        background: linear-gradient(to right, transparent, var(--fg-divider, #e9ecef) 20%, var(--fg-divider, #e9ecef) 80%, transparent);
        margin: 0;
      }

      .separator-label {
        position: absolute;
        top: 50%;
        left: 50%;
        transform: translate(-50%, -50%);
        background: var(--bg-elevated, rgba(240, 240, 240, 0.3));
        padding: 0 0.75rem;
        color: var(--fg-secondary-text, #6c757d);
        font-size: 0.8rem;
        font-weight: 600;
        letter-spacing: 0.5px;
        text-transform: uppercase;
      }
    }

    .empty-notice {
      text-align: center;
      color: var(--fg-secondary-text, #6c757d);
      font-style: italic;
      padding: 0.75rem;
      width: 100%;
    }

    .array-item-details {
      width: 100%;
      background: rgba(91, 192, 222, 0.1);
      padding: 0.25rem;
      border-radius: 6px;
      margin-bottom: 0.25rem;

      .detail-row {
        display: flex;
        gap: 0.5rem;
        flex-wrap: wrap;

        .detail-label {
          font-size: 0.85rem;
          color: var(--fg-secondary-text, #495057);

          .detail-value {
            font-weight: 600;
            color: var(--fg-text, #333);
          }
        }
      }
    }
  }
  // Simple attribute display
  .simple-attribute-grid {
    @include attribute-container();
    display: grid;
    grid-template-columns: 1fr auto;
    grid-template-rows: auto auto auto;
    gap: 0.25rem;
    width: 100%;
    box-sizing: border-box;

    .attribute-name {
      grid-column: 1 / 2;
      grid-row: 1;
      font-weight: 600;
      color: var(--fg-text, #2c3e50);
      font-size: 0.9rem;
    }

    .attribute-type {
      grid-column: 2 / 3;
      grid-row: 1;
      font-size: 0.75rem;
      background: var(--bg-card, rgba(255, 255, 255, 0.8));
      border: 1px solid var(--fg-border, #d1ecf1);
      padding: 0.1rem 0.4rem;
      border-radius: 3px;
      color: var(--info-color, #457B9D);
      justify-self: end;
      align-self: start;
    }

    .attribute-description {
      grid-column: 1 / 3;
      grid-row: 2;
      font-size: 0.8rem;
      color: var(--fg-secondary-text, #6c757d);
      font-style: italic;
    }

    .attribute-value {
      grid-area: value;
      font-family: 'Courier New', monospace;
      background: var(--bg-hover, #f8f9fa);
      padding: 0.25rem 0.5rem;
      border-radius: 3px;
      border: 1px solid var(--fg-divider, #e0e0e0);
      word-break: break-all;
      overflow-wrap: break-word;
      min-height: 1.5rem;
      display: flex;
      align-items: center;

      .null-value, .undefined-value {
        color: var(--fg-tertiary-text, #999);
        font-style: italic;
      }

      .any-value {
        width: 100%;

        app-code-highlight {
          width: 100%;
          display: block;
        }
      }

      /* URL link styling */
      .url-link {
        color: var(--primary-color, #007bff);
        text-decoration: none;
        display: inline-flex;
        align-items: center;
        gap: 0.25rem;
        transition: color 0.2s ease;

        &:hover {
          color: var(--primary-hover-color, #0056b3);
          text-decoration: underline;
        }

        .external-link-icon {
          font-size: 0.8rem !important;
          opacity: 0.7;
        }
      }

      /* XID link styling */
      .xid-link {
        color: var(--secondary-color, #6c757d);
        text-decoration: none;
        display: inline-flex;
        align-items: center;
        gap: 0.25rem;
        font-weight: 500;
        transition: color 0.2s ease;

        &:hover {
          color: var(--primary-color, #007bff);
          text-decoration: underline;
        }

        .internal-link-icon {
          font-size: 0.8rem !important;
          opacity: 0.7;
        }
      }
    }

    .attribute-actions {
      grid-column: 2 / 3;
      grid-row: 3;
      justify-self: end;
      align-self: start;

      .copy-btn {
        @include button-style;
        display: inline-flex;
        align-items: center;
        margin-left: 0.5rem;
      }
    }
  }
  // Grid layout optimizations
  .grid-container {
    display: grid;
    grid-template-columns: repeat(auto-fit, minmax(280px, 1fr));
    gap: 0.75rem; // Reduced from 1rem for compactness
    padding: 0.25rem; // Reduced from 0.5rem for compactness

    .unified-item-row.object-row,
    .unified-item-row.array-row {
      grid-column: 1 / -1;
      width: 100%;
    }

    .expanded-content {
      grid-column: 1 / -1;
      width: 100%;
    }
  }

  // Responsive design
  @media (max-width: 768px) {
    .array-items, .object-items, .grid-container {
      grid-template-columns: 1fr !important;
    }

    .simple-items-grid {
      grid-template-columns: 1fr !important;
    }
  }

  @media (min-width: 769px) and (max-width: 1024px) {
    .array-items, .object-items, .grid-container {
      grid-template-columns: repeat(auto-fit, minmax(250px, 1fr)) !important;
    }

    .simple-items-grid {
      grid-template-columns: repeat(auto-fit, minmax(180px, 1fr)) !important;
    }
  }
}

/* Font size specific adjustments for new layout */
:host-context(body.font-size-small) {
  .simple-attribute-grid {
    .attribute-value {
      padding: 0.15rem 0.3rem;
      font-size: 0.7rem;

      .url-link, .xid-link {
        font-size: 0.7rem;
        gap: 0.15rem;

        .external-link-icon, .internal-link-icon {
          font-size: 0.6rem !important;
        }
      }
    }
  }

  .expanded-content {
    .simple-items-section {
      margin-bottom: 0.125rem;

      .simple-items-grid {
        grid-template-columns: repeat(auto-fill, minmax(150px, 1fr));
        gap: 0.25rem;

        app-resource-document-item {
          ::ng-deep .simple-attribute-grid {
            padding: 0.25rem;
          }
        }
      }
    }

    .complex-items-section {
      .complex-items-container {
        gap: 0.25rem;
      }
    }

    .items-separator {
      margin: 0.125rem 0;

      .separator-label {
        font-size: 0.7rem;
        padding: 0 0.5rem;
      }
    }
  }
}

:host-context(body.font-size-medium) {
  .expanded-content {
    .simple-items-section {
      margin-bottom: 0.25rem;

      .simple-items-grid {
        grid-template-columns: repeat(auto-fill, minmax(200px, 1fr));
        gap: 0.5rem;

        app-resource-document-item {
          ::ng-deep .simple-attribute-grid {
            padding: 0.5rem;
          }
        }
      }
    }

    .items-separator {
      margin: 0.25rem 0;
    }
  }
}

:host-context(body.font-size-large) {
  .simple-attribute-grid {
    .attribute-value {
      padding: 0.35rem 0.75rem;
      font-size: 0.95rem;
      min-height: 2rem;

      .url-link, .xid-link {
        font-size: 0.95rem;
        gap: 0.35rem;

        .external-link-icon, .internal-link-icon {
          font-size: 1rem !important;
        }
      }
    }
  }

  .expanded-content {
    .simple-items-section {
      margin-bottom: 0.5rem;

      .simple-items-grid {
        grid-template-columns: repeat(auto-fill, minmax(250px, 1fr));
        gap: 0.75rem;

        app-resource-document-item {
          ::ng-deep .simple-attribute-grid {
            padding: 0.75rem;
          }
        }
      }
    }

    .complex-items-section {
      .complex-items-container {
        gap: 0.75rem;
      }
    }

    .items-separator {
      margin: 0.5rem 0;

      .separator-label {
        font-size: 0.9rem;
        padding: 0 1rem;
      }
    }
  }
}
