@use '../shared-variables' as vars;
@use '../shared-breakpoints' as breakpoints;
@use '../shared-design-tokens' as tokens;
@use '../../../styles/theme' as *;
@use '../_vertical-bars' as vbars;
@use '../shared-buttons' as buttons;

:host {
  width: 100%;
  max-width: 100%;
  display: block;
  overflow-x: hidden;
  box-sizing: border-box;
}

.resource-document {
  position: relative;
  @include vbars.vertical-color-bar(c(dark));
  margin-bottom: s(l);
  font-size: $body-size;
  width: 100%;
  max-width: 100%;
  overflow-x: hidden;
  box-sizing: border-box;

  // Add a dark gray left border to the resource-document
  border-left: 3px solid var(--fg-secondary-text, #444);

  // Ensure page header stays at top during loading
  ::ng-deep .page-header-main {
    position: static !important;
    align-self: flex-start !important;
    justify-self: flex-start !important;
    margin-top: 0 !important;
    top: 0 !important;
  }

  // Container to allow flex layout for responsive design
  .resource-document-container {
    width: 100%;
    max-width: 100%;
    display: flex;
    flex-direction: column; // Default stacked layout for mobile
    gap: 1rem;
    overflow-x: hidden;
    box-sizing: border-box;
      // Responsive layout for desktop (width > 541px)
    @include breakpoints.custom-breakpoint(800px) {
      &.has-document {
      flex-direction: row;

      .attributes-section {
        flex: 1;
        min-width: 300px;
        margin-right: 1.5rem;
      }

      .document-section {
        flex: 3;
        min-width: 300px;
        max-width: 75%;
      }
      }
    }
  }

  h3 {
    display: flex;
    align-items: center;
    gap: s(xs);
    font-size: $heading-size;
    font-weight: 600;
    margin-bottom: s(m);
    color: c(dark);
  }

  h4 {
    font-size: vars.$h4-size;
    font-weight: 700;
    margin-bottom: 0.7rem;
    color: #2c3e50;
    word-break: break-all;
  }

  section {
    margin-top: 0; // Remove top margin as we're using gap in the container
    padding: 0.75rem;
    background-color: var(--bg-elevated, #f8f9fa);
    @include tokens.radius('lg');
    border: 1px solid var(--fg-border, #dee2e6);
    width: 100%;
    max-width: 100%;
    box-sizing: border-box;
    overflow-x: hidden;
  }

  /* Document section styles */
  .document-section {
    h3 {
      margin-bottom: 1rem;
      padding-bottom: 0.5rem;
      border-bottom: 1px solid var(--fg-divider, #e9ecef);
    }

    .doc-icon {
      font-size: vars.$content-size * 1.5;
      color: var(--success-color, #1abc9c);
    }

    .action-buttons {
      margin-top: 1rem;
      margin-bottom: 1rem;
    }

    // Download button styling
    .download-btn {
      @include buttons.button-primary;
      padding: 10px 15px;
      font-size: vars.$content-size;

    }

    .loading-document,
    .document-error {
      display: flex;
      align-items: center;
      margin: 1rem 0;
      padding: 0.75rem;
      @include tokens.radius('sm');
    }

    .loading-document {
      background-color: var(--info-color, #e8f4fd);
      border: 1px solid var(--fg-border, #d1e9f5);
      color: var(--fg-text, #31708f);

      .loading-icon {
        color: var(--info-color, #2196f3);
        margin-right: 0.5rem;
        animation: spin 1.5s linear infinite;
      }

      p {
        margin: 0;
      }
    }

    .document-error {
      background-color: var(--error-color, #f8d7da);
      border: 1px solid var(--fg-border, #f5c6cb);
      color: var(--fg-text, #721c24);

      .error-icon {
        color: var(--error-color, #f44336);
        margin-right: 0.5rem;
      }

      p {
        margin: 0;
        color: var(--error-color, #d32f2f);
      }
    }
  }

  /* Attributes section styles */
  .attributes-section {

    /* Simple Attributes Section */
    .simple-attributes-section {
      margin-bottom: 0.5rem;
    }

    .simple-attributes-grid,
    ::ng-deep .simple-items-grid {
      display: grid;
      grid-template-columns: repeat(auto-fit, minmax(min(280px, calc(100% - 2rem)), 1fr));
      gap: 0.75rem;
      width: 100%;
      max-width: 100%;
      overflow-x: hidden;
      box-sizing: border-box;
      justify-content: start;
      align-items: start;

      // Consistent styling for all simple attributes, whether top-level or nested
      app-resource-document-item {
        width: 100%;
        max-width: 100%;
        min-width: 0; // Allow shrinking
        overflow: hidden;
        box-sizing: border-box;

        ::ng-deep .field-group {
          background: var(--bg-card, white);
          @include tokens.radius('md');
          border: 1px solid var(--fg-divider, #e0e0e0);
          padding: 0.75rem;
          @include tokens.shadow('xs');
          height: 100%;
          width: 100%;
          max-width: 100%;
          min-width: 0; // Allow shrinking
          box-sizing: border-box;
          overflow: hidden;

          // Ensure expandable field groups always fill horizontal space
          &.expandable-field {
            grid-column: 1 / -1; // Span all columns
            width: 100%;
          }
        }
      }
    }

    /* Complex Attributes Section */
    .complex-attributes-section {
      margin-top: 0.25rem;
    }

    .attributes-separator {
      position: relative;
      margin: 0.25rem 0;
      text-align: center;

      hr {
        border: 0;
        height: 2px;
        background: linear-gradient(to right, transparent, var(--fg-divider, #e9ecef) 20%, var(--fg-divider, #e9ecef) 80%, transparent);
        margin: 0;
      }

      .separator-label {
        position: absolute;
        top: 50%;
        left: 50%;
        transform: translate(-50%, -50%);
        background: var(--bg-elevated, #f8f9fa);
        padding: 0 1rem;
        color: var(--fg-secondary-text, #6c757d);
        font-size: 0.9rem;
        font-weight: 600;
        letter-spacing: 0.5px;
        text-transform: uppercase;
      }
    }

    .complex-attributes-container {
      display: flex;
      flex-direction: column;
      gap: 1rem;
      width: 100%;
    }

    .complex-attribute-tile {
      width: 100%;
      background: var(--bg-card, white);
      @include tokens.radius('lg');
      border: 1px solid var(--fg-border, #e0e0e0);
      padding: 1rem;
      @include tokens.shadow('xs');

      app-resource-document-item {
        display: block;
        width: 100%;

        ::ng-deep .resource-document-item {
          width: 100%;

          // Ensure expandable field groups always fill horizontal space
          .field-group.expandable-field {
            width: 100%;
            margin-bottom: 0.5rem;
          }

          &[data-item-type="array"],
          &[data-item-type="object"] {
            width: 100%;

            .expanded-content {
              width: 100%;
            }
          }
        }
      }
    }

    // Old attribute-tile and simple-attribute classes removed - now using resource-document-item components

    // Remove old styles that are now redundant
    .attributes-grid {
      display: grid;
      grid-template-columns: repeat(auto-fill, minmax(300px, 1fr));
      gap: 1rem;
      margin-bottom: 1.5rem;
      width: 100%;
    }

    .complex-attribute {
      margin-bottom: 1.5rem;
      padding: 0.5rem;

      h4 {
        margin-bottom: 0.5rem;
        color: var(--fg-text, #2c3e50);
      }

      app-resource-document-item {
        display: block;
        width: 100%;
        position: relative;

        ::ng-deep .resource-document-item.nested {
          padding-left: 0.15rem;
          margin-bottom: 0.25rem;
        }

        ::ng-deep .unified-item-row.array-row,
        ::ng-deep .unified-item-row.object-row,
        ::ng-deep .unified-item-row.simple-row {
          border-left-width: 3px;
        }

        ::ng-deep .expanded-content.array-content,
        ::ng-deep .expanded-content.object-content {
          border-left-width: 3px;
        }

        // Ensure color bars extend to the bottom in all nested items
        ::ng-deep .field-group::before,
        ::ng-deep .unified-item-row.array-row::before,
        ::ng-deep .unified-item-row.object-row::before,
        ::ng-deep .unified-item-row.simple-row::before,
        ::ng-deep .expanded-content.array-content::before,
        ::ng-deep .expanded-content.object-content::before {
          top: 0 !important;
          bottom: 0 !important;
          left: 0 !important;
          height: 100% !important;
          border-bottom-left-radius: 0 !important;
          outline: none !important;
          box-shadow: none !important;
          z-index: 1 !important;
        }
      }
    }
  }
}

/* Ensure app-code-highlight takes full width and scrolls */
app-code-highlight {
  display: block;
  width: 100%;
  margin-bottom: 1rem;
}

/* Spin animation is now available globally from styles.scss */

/* Font size specific adjustments for complex attributes layout */
:host-context(body.font-size-small) {
  .attributes-section {
    .simple-attributes-grid {
      gap: 0.5rem;
      grid-template-columns: repeat(auto-fit, minmax(min(220px, calc(100% - 1rem)), 1fr));

      app-resource-document-item {
        ::ng-deep .field-group {
          padding: 0.5rem;
          min-width: 0;
        }
      }
    }

    .complex-attribute-tile {
      padding: 0.5rem;

      app-resource-document-item {
        ::ng-deep .simple-items-grid {
          grid-template-columns: repeat(auto-fit, minmax(min(200px, calc(100% - 1rem)), 1fr)) !important;
          gap: 0.5rem;
        }

        ::ng-deep .field-group {
          padding: 0.5rem;
        }
      }
    }
  }
}

:host-context(body.font-size-medium) {
  .attributes-section {
    .simple-attributes-grid {
      gap: 0.5rem;
      grid-template-columns: repeat(auto-fit, minmax(min(250px, calc(100% - 1.5rem)), 1fr));

      app-resource-document-item {
        ::ng-deep .field-group {
          padding: 0.75rem;
        }
      }
    }
  }
}

:host-context(body.font-size-large) {
  .attributes-section {
    .simple-attributes-grid {
      gap: 0.75rem;
      grid-template-columns: repeat(auto-fit, minmax(min(300px, calc(100% - 2rem)), 1fr));

      app-resource-document-item {
        ::ng-deep .field-group {
          padding: 1rem;
        }
      }
    }

    .complex-attribute-tile {
      padding: 1rem;

      app-resource-document-item {
        ::ng-deep .simple-items-grid {
          grid-template-columns: repeat(auto-fit, minmax(min(280px, calc(100% - 2rem)), 1fr)) !important;
          gap: 0.75rem;
        }

        ::ng-deep .field-group {
          padding: 1rem;
        }
      }
    }
  }
}

.document-container {
  margin-top: 1rem;
  padding: 1rem;
  background-color: var(--bg-elevated, #f8f9fa);
  border-radius: 6px;
  border: 1px solid var(--fg-border, #dee2e6);
}

.loading-document {
  display: flex;
  align-items: center;
  margin: 1rem 0;
  padding: 0.75rem;
  background-color: var(--info-color, #e8f4fd);
  border-radius: 4px;
  border: 1px solid var(--fg-border, #d1e9f5);
  color: var(--fg-text, #31708f);

  .loading-icon {
    color: var(--info-color, #2196f3);
    margin-right: 0.5rem;
    animation: spin 1.5s linear infinite;
  }

  p {
    margin: 0;
  }
}

.document-error {
  display: flex;
  align-items: center;
  margin: 1rem 0;
  padding: 0.75rem;
  background-color: var(--error-color, #f8d7da);
  border-radius: 4px;
  border: 1px solid var(--fg-border, #f5c6cb);
  color: var(--fg-text, #721c24);

  .error-icon {
    color: var(--error-color, #f44336);
    margin-right: 0.5rem;
  }

  p {
    margin: 0;
    color: var(--error-color, #d32f2f);
  }
}
