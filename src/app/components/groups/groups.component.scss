@use '../shared-variables' as vars;
@use '../_vertical-bars' as vbars;
@use '../../../styles/theme' as *;

/* Component-specific overrides for groups */
/* These will take precedence over global styles due to component encapsulation */


/* Container styling */
.groups {
  width: 100%;
  max-width: 1000px;
  margin: 0 auto;
  display: flex;
  flex-direction: column;
  align-items: center;
  padding: 0;
}

/* Full-width header wrapper */
.header-outer {
  width: 100vw;
  margin-left: 50%;
  transform: translateX(-50%);
  background: bg('card');
}

/* New Page Header Layout */
.page-header {
  display: flex;
  justify-content: space-between;
  align-items: center;
  width: 100%;
  max-width: 1440px;
  margin: 0 auto;
  padding: 1rem 2.5vw;
  border-bottom: 1px solid fg('divider');
  margin-bottom: 1.5rem;
}

.page-header h2 {
  margin: 0;
  font-size: 1.5rem;
  font-weight: 600;
  color: c(dark);
}

.page-header .view-toggle {
  display: flex;
  gap: 0.5rem;
}

/* Ensure pagination component is full width */
app-pagination {
  width: 100%;
}

// The global grid-container is now provided by _layout.scss
// Add component-specific overrides for grid-container if needed
.grid-container {
  display: grid;
  grid-template-columns: repeat(auto-fit, minmax(340px, 1fr)); // Increased min width for group tiles
  gap: 1.5rem 2rem;
  grid-row-gap: 1.5rem;
  grid-column-gap: 2rem;
  width: 100%;
  margin: 0 auto;
  justify-items: stretch;
  align-items: start; // Changed from start to allow tiles to determine their own height
  grid-auto-rows: auto; // Changed from minmax to auto to allow tiles to expand as needed
  // Removed overflow and max-height constraints to allow vertical expansion
  box-sizing: border-box;
  padding: 0.5rem;
}

.groups-container, .list-container {
  width: 100%;
  max-width: none;
  margin: 0;
  padding: 0 24px 24px 24px;
  box-sizing: border-box;
}

.grid {
  width: 100%;
  display: grid;
  grid-template-columns: repeat(auto-fill, minmax(340px, 1fr));
  gap: 32px 24px;
  align-items: start; // Changed from stretch to start to allow tiles to size based on content
}

.grid-item {
  width: 100%;
  height: auto; // Changed from 100% to auto to allow content-based sizing
  align-self: start; // Changed from stretch to start
  display: flex;
  flex-direction: column;
  position: relative;
  background: white;
  border-radius: $radius;
  box-shadow: 0 2px 8px rgba(0,0,0,0.07);
  border: 1px solid c(neutral);
  @include chromeline(#9575cd); /* Purple for group objects */
  min-height: 210px; // Keep minimum height for consistency
  // Removed max-height and fixed height to allow vertical expansion
  margin-bottom: 0;
  transition: transform 0.2s, box-shadow 0.2s;
  overflow: visible; // Changed from hidden to visible to show all content
  @include pad-x(m);
  @include pad-y(s);
}

.grid-item:hover {
  transform: translateY(-4px);
  box-shadow: 0 4px 12px rgba(0, 0, 0, 0.15);
  border-color: c(neutral);
}

.grid-item h3 {
  font-size: $heading-size;
  font-weight: 600;
  color: c(dark);
  margin-top: 0;
  margin-bottom: s(s);
}

.grid-item .attribute {
  margin-bottom: 0.5rem; // Reduced from 1rem for compactness
  width: 100%; // Ensure attributes fill parent grid item
  box-sizing: border-box; // Include padding and border in width calculation

  &.simple-attribute {
    display: flex;
    flex-direction: column;
    width: 100%; // Ensure simple attribute containers fill parent

    .attribute-header {
      display: flex;
      flex-wrap: wrap;
      gap: 0.25rem; // Reduced from 0.5rem for compactness
      margin-bottom: 0.25rem; // Reduced from 0.5rem for compactness
      align-items: center;
      width: 100%; // Ensure header fills container

      strong {
        font-weight: 600;
        color: #2c3e50;
        font-size: vars.$content-size;
      }
    }    .attribute-value {
      font-size: $body-size;
      color: c(text);
      word-break: break-word;
      padding: s(xs) 0;
      // Removed line-clamp and overflow restrictions to allow full content display
      overflow: visible;
      text-overflow: unset;
      width: 100%; // Make attribute values fill parent horizontally
      flex: 1; // Allow attribute values to expand within flex containers
    }
  }
}

.label-item {
  margin-bottom: 0.25rem;

  .label-key {
    color: #457B9D;
    font-weight: 500;
  }

  .label-value {
    color: #333;
    margin-left: 0.25rem;
  }
}

.resource-list {
  padding-left: 1rem;
  margin: 0.25rem 0;

  li {
    margin-bottom: 0.35rem;
  }

  .resource-link {
    color: #457B9D;
    text-decoration: none;
    font-weight: 500;

    &:hover {
      text-decoration: underline;
    }
  }

  .resource-count {
    color: #6c757d;
    font-size: vars.$small-size;
  }
}

/* Tile styles specific to groups component */
.tile {
  display: inline-block;
  margin-top: 16px;
  padding: 8px 15px;
  background-color: #3498db; /* Match the download button from resource document */
  color: #fff !important; /* Force white text color */
  text-decoration: none;
  border-radius: 5px;
  transition: background-color 0.2s ease;
  align-self: flex-start;
  font-weight: 500;
  font-size: vars.$content-size; /* Use shared variable for consistency */
  display: inline-flex;
  align-items: center;
  gap: 8px;
}

.tile:hover {
  background-color: #2980b9; /* Match hover color from resource document */
  text-decoration: none !important;
}

.tile-footer-container {
  margin-top: auto; /* Push to bottom of flex container */
  width: 100%;
}

.tile-footer {
  margin-top: 8px;
  font-size: vars.$small-size;
  color: #6c757d; /* Match text color from resource document */
  width: 100%;
  overflow: hidden;
  text-overflow: ellipsis;
  white-space: nowrap;
}

.tile-footer {
  margin-top: 1.1em;
  border-top: 1px solid #ececec;
  padding-top: 0.5em;
  color: #888;
  font-size: 0.8rem; /* Smaller font for footer text */
  display: flex;
  justify-content: flex-end;
  width: 100%; /* Ensure footer spans full width */
}

/* Attribute styles */

h3 {
  font-size: 1.15rem;
  font-weight: 700;
  margin-bottom: 0.7rem;
  color: #2c3e50;
  word-break: break-all;
}

/* Resource Types section styles - styled like arrays in resource document */
.resource-types {
  margin-bottom: s(s); // Reduced from s(m) for compactness
  flex: 1;
  display: flex;
  flex-direction: column;

  .attribute-value {
    position: relative;
    padding-left: s(xs);
    @include chromeline(c(info)); /* Blue vertical bar like arrays */
    margin-top: s(xs);
    margin-bottom: s(xs);
    background-color: rgba(91, 192, 222, 0.05);
    border-radius: 0 $radius $radius 0;
    // Removed max-height restriction to allow full content display
    overflow: visible;
    width: 100%; // Ensure resource types fill parent horizontally
    box-sizing: border-box; // Include padding and border in width calculation
  }
}

// Remove extra left padding and margin from resource-types-list and resource-type-row
.resource-types-list {
  position: relative;
  margin-top: 0.25rem; // Reduced from 0.5rem for compactness
  padding-left: 0.25rem !important;
  margin-left: 0 !important;
  border-left: 3px solid #5bc0de; /* Blue vertical bar like arrays */

  &::before {
    content: '';
    position: absolute;
    top: 0;
    left: -3px; /* Match the border-left width */
    width: 3px; /* Match the border-left width */
    height: 100%;
    background-color: #5bc0de; /* Match the border color */
    border-bottom-left-radius: 4px;
    z-index: 1;
  }
}

.resource-type-row {
  display: inline-block;
  background: rgba(91, 192, 222, 0.1);
  @include chromeline(c(info));
  @include pad-x(xs);
  padding-top: 2px;
  padding-bottom: 2px;
  border-radius: 0 $radius $radius 0;
  margin-bottom: s(xs);
  font-size: $body-size;
  font-weight: 500;
  line-height: 1.7;
  margin-left: 0 !important;
}

// Ensure .attribute-value.resource-types-list has proper styling with vertical bar
.attribute-value.resource-types-list {
  position: relative;
  padding-left: 0.5rem !important;
  margin-left: 0 !important;
  background-color: rgba(91, 192, 222, 0.05);
  border-radius: 0 $radius $radius 0;
  width: 100%; // Ensure resource types list fills parent horizontally
  box-sizing: border-box; // Include padding and border in width calculation
}

.resource-list {
  list-style: none;
  padding: 0.5rem;
  margin: 0;

  li {
    margin-bottom: 0.35rem;
    padding: 0.15rem 0.25rem;
    border-radius: 3px;
    transition: background-color 0.2s ease;

    &:hover {
      background-color: rgba(0, 0, 0, 0.04);
    }
  }
}

.resource-link {
  color: c(primary);
  text-decoration: none;
  font-weight: 500;
  font-size: $body-size;
  padding-right: s(xs);

  &:hover {
    text-decoration: underline;
  }

  &:focus-visible {
    outline: 2px solid c(primary);
    outline-offset: 2px;
  }
}

.resource-count {
  color: #6c757d;
  font-size: 0.98rem;
  margin-left: 2px;
}

.group-icon {
  font-size: vars.$content-size * 1.5;
  color: #9575cd; /* Match the vertical bar color */
  margin-right: 0.5rem;
}

.resource-type-icon {
  font-size: vars.$content-size * 1.1;
  color: #5bc0de; /* Match the array bar color */
  margin-right: 0.25rem;
  vertical-align: middle;
}

.description-attribute {
  padding-bottom: 0.5rem;
  margin-bottom: 1rem;
  border-bottom: 1px solid #e9ecef;
}

/* Added styles for array-like appearance */
.item-count {
  color: #6c757d;
  font-size: vars.$small-size;
  margin-right: 0.5rem;
  font-weight: normal;
}

.attribute-type {
  @extend %badge;
  color: c(primary);
  background-color: rgba(94, 92, 230, 0.1);
  border: 1px solid rgba(94, 92, 230, 0.3);
  font-weight: 500;
}

/* Additional styles for vertical expansion */
.group-tile {
  min-height: 180px;
  height: auto; // Allow tile to expand based on content
  display: flex;
  flex-direction: column;
  justify-content: flex-start;
  align-items: stretch;
  overflow: visible; // Allow content to be visible
  padding: 16px;
  gap: 12px; // Add consistent spacing between sections
}

.group-header {
  flex-shrink: 0; // Don't compress the header
}

.group-attributes {
  flex-grow: 0; // Don't expand unless needed
  flex-shrink: 0; // Don't compress
  overflow: visible; // Show all attributes
}

.group-resources {
  flex-grow: 0; // Don't expand unless needed
  flex-shrink: 0; // Don't compress
  margin-top: auto; // Push to bottom if needed
}

.resource-collections-list {
  display: flex;
  flex-wrap: wrap;
  gap: 8px;
  margin-top: 8px;
}

.attribute-row {
  margin-bottom: 6px;
  display: flex;
  flex-wrap: wrap;
  gap: 8px;
  align-items: center;
}

.attribute-key {
  font-weight: 600;
  color: #2c3e50;
  min-width: 80px;
}

.attribute-type {
  font-size: 0.85em;
  padding: 2px 6px;
  border-radius: 3px;
  background: #e9ecef;
  color: #495057;
}

.attribute-value {
  flex: 1;
  word-break: break-word;
  overflow-wrap: break-word;
  width: 100%; // Ensure attribute values fill parent horizontally
  box-sizing: border-box; // Include padding and border in width calculation
}

.list-table {
  width: 100%;
  table-layout: auto;
}

/* Responsive adjustments */
@media (max-width: 768px) {
  .grid-item {
    min-width: 100%;
    max-width: 100%;
  }

  /* Reduce padding on small screens */
  .groups {
    padding: 0 0.5rem;
  }
}

/* List view styling */
.list-view {
  width: 100%;
  overflow-x: auto;
  margin: 0 auto;
  display: flex;
  justify-content: center;
}

.groups-table {
  width: 100%;
  max-width: 1000px;
  border-collapse: collapse;
  border-spacing: 0;
  background-color: #fff;
  box-shadow: 0 1px 3px rgba(0, 0, 0, 0.1);
  border-radius: 4px;
  table-layout: fixed;
}

.groups-table th, .groups-table td {
  padding: 0.6rem 0.7rem;
  text-align: left;
  border-bottom: 1px solid fg('divider');
  vertical-align: top;
  font-size: 0.95rem;
  word-break: break-word;
}

.groups-table th {
  background: bg('hover');
  font-weight: 600;
  color: #495057;
  position: sticky;
  top: 0;
  z-index: 1;
}

.groups-table tr:last-child td {
  border-bottom: none;
}

.groups-table tr:hover td {
  background-color: #f8f9fa;
}



a {
  color: #007bff;
  text-decoration: none;

  &:hover {
    text-decoration: underline;
  }
}
